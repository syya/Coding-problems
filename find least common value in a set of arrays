import java.util.ArrayList;

public class Solution{
	
	public static void main(String[] args){
		int[][] array1={{1,2,3,4,5},{2,3,5},{1,3,5}};
		
		ArrayList<ArrayList<Integer>> arrays=new ArrayList<ArrayList<Integer>>();
		for(int i=0;i<3;i++){
			arrays.add(new ArrayList<Integer>());
			for (int j=0;j<array1[i].length;j++){
//				System.out.println("i="+i+", "+"j="+j);
				arrays.get(i).add(array1[i][j]);
			}
		}
//		System.out.println(arrays);
		System.out.println(getLCV(arrays));
//		System.out.println(binarySearch(arrays.get(0), 0, 3, 3));
	}
    public static int getLCV(ArrayList<ArrayList<Integer>> arrays){
        int numofarrays=arrays.size();
        int min_len=Integer.MAX_VALUE;
        int no_array=0; //record which array is shortest
        for(int i=0;i<numofarrays;i++){
            int len=arrays.get(i).size();
            if(len<min_len) {
                min_len=len;
                no_array=i;
            }
        
        }
//        System.out.println(min_len);
//        System.out.println(no_array);
        for(int a:arrays.get(no_array)){
        	System.out.println("Now check the integer "+a+"; the check result is: "+check(a, arrays, no_array));
            if(check(a, arrays, no_array)){
                return a;
            }
        }
        return Integer.MAX_VALUE;
        
    }
    
    static boolean check(int num, ArrayList<ArrayList<Integer>> arrays,int no_array){
        boolean  flag=true;
    	for(int i=0;i<arrays.size();i++){
            if(i!=no_array){
                  ArrayList<Integer> cur_array=arrays.get(i);
                  System.out.println("The current num is: "+num+"; the current array is: "+cur_array+"; the search result is: "+binarySearch (cur_array,0,cur_array.size()-1, num));
                  if(binarySearch (cur_array,0,cur_array.size()-1, num)==false){
                      flag=false;
                	  break;
                  }//check whether num is in cur_array;
                  
                  
            }
        
        }
    	
    	return flag;
    }
    
    static boolean binarySearch(ArrayList<Integer> cur_array, int start, int end, int target){
    	if(start>end) return false;
    	int mid=(start+end)/2;
    	if(cur_array.get(mid)==target) return true;
    	if(cur_array.get(mid)>target) 
    		return binarySearch(cur_array, start, mid-1, target );
    	else
    		return binarySearch(cur_array, mid+1, end, target );
    }
    
    
    

}
